{"version":3,"sources":["utils/searchHelper.ts","components/SearchLink.tsx","constants.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PeopleTable.tsx","api.ts","types/SortField.tsx","components/HelperFunctions.tsx","components/PeoplePage.tsx","components/Navbar.tsx","components/HomePage/HomePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","CENTURIES_FOR_FILTERING","onToggleCenturies","centuries","century","includes","filter","centuryNew","PeopleFilters","setSearchParams","getAll","sex","get","query","className","classNames","type","onChange","event","setSearchWith","target","placeholder","map","Loader","sortFields","PeopleTable","people","personSlug","useParams","sortField","sortOrder","field","newSortField","person","mother","find","name","motherName","father","fatherName","slug","born","died","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","SortField","normalizeName","toLowerCase","getfilteredPeople","peopleLoaded","filteredPeople","length","Math","ceil","findIfCenturyIncluded","normalizedQuery","trim","includesNormalizedQuery","sort","a","b","Name","localeCompare","Sex","Born","Died","reverse","PeoplePage","useState","errorMessage","setErrorMessage","setPeople","isLoading","setIsLoading","NO_PEOPLE_CONDITION","NO_MATCHING_PEOPLE_CONDITION","useEffect","getPeople","catch","finally","Navbar","getLinkClass","isActive","role","HomePage","PageNotFound","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ce3c03fd.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","export const CENTURIES_FOR_FILTERING = ['16', '17', '18', '19', '20'];\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from './SearchLink';\nimport { SearchParams, getSearchWith } from '../utils/searchHelper';\nimport { CENTURIES_FOR_FILTERING } from '../constants';\n\nfunction onToggleCenturies(centuries: string[], century: string) {\n  return centuries.includes(century)\n    ? centuries.filter((centuryNew) => century !== centuryNew)\n    : [...centuries, century];\n}\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries') || [];\n  const sex = searchParams.get('sex') || '';\n  const query = searchParams.get('query') || '';\n\n  const FEMALE_SEX = 'f';\n  const MALE_SEX = 'm';\n  const ALL = '';\n\n  function setSearchWith(paramsToUpdate: SearchParams) {\n    const search = getSearchWith(searchParams, paramsToUpdate);\n\n    setSearchParams(search);\n  }\n\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSearchWith({ query: event.target.value });\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={classNames({\n            'is-active': sex === ALL,\n          })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={classNames({\n            'is-active': sex === MALE_SEX,\n          })}\n          params={{ sex: MALE_SEX }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={classNames({\n            'is-active': sex === FEMALE_SEX,\n          })}\n          params={{ sex: FEMALE_SEX }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            value={query}\n            onChange={handleQueryChange}\n            placeholder=\"Search\"\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES_FOR_FILTERING.map((century) => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={classNames('button', 'mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n                params={{\n                  centuries: onToggleCenturies(centuries, century),\n                }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            centuries: null,\n            sex: null,\n            query: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { SearchLink } from './SearchLink';\n\ninterface Props {\n  people: Person[],\n}\n\nconst sortFields = ['Name', 'Sex', 'Born', 'Died'];\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n  const [searchParams] = useSearchParams();\n  const sortField = searchParams.get('sortField') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const handleClickSorting = (newSortField: string) => {\n    const isFirstClick = newSortField !== sortField;\n    const isSecondClick = newSortField === sortField && sortOrder !== 'desc';\n\n    if (isFirstClick) {\n      return {\n        sortField: newSortField,\n        sortOrder: null,\n      };\n    }\n\n    if (isSecondClick) {\n      return {\n        sortField: newSortField,\n        sortOrder: 'desc',\n      };\n    }\n\n    return {\n      sortField: null,\n      sortOrder: null,\n    };\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {sortFields.map((field) => (\n            <th>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {field}\n                <SearchLink params={handleClickSorting(field)}>\n                  <span className=\"icon\">\n                    <i className={classNames('fas', {\n                      'fa-sort': sortField !== field,\n                      'fa-sort-up': sortField === field && !sortOrder,\n                      'fa-sort-down': sortField === field\n                        && sortOrder === 'desc',\n                    })}\n                    />\n                  </span>\n                </SearchLink>\n              </span>\n            </th>\n          ))}\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          const mother = people.find(({ name }) => name === person.motherName);\n          const father = people.find(({ name }) => name === person.fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={classNames({\n                'has-background-warning': person.slug === personSlug,\n              })}\n            >\n              <td>\n                <Link\n                  to={person.slug}\n                  className={classNames({\n                    'has-text-danger': person.sex === 'f',\n                  })}\n                >\n                  {person.name}\n                </Link>\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n\n              {mother ? (\n                <td>\n                  <Link to={mother?.slug} className=\"has-text-danger\">\n                    {person.motherName}\n                  </Link>\n                </td>\n              ) : (\n                <td>{person.motherName || '-'}</td>\n              )}\n\n              {father ? (\n                <td>\n                  <Link to={father?.slug}>{person.fatherName}</Link>\n                </td>\n              ) : (\n                <td>{person.fatherName || '-'}</td>\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum SortField {\n  Name = 'Name',\n  Sex = 'Sex',\n  Born = 'Born',\n  Died = 'Died',\n}\n","import { Person } from '../types';\nimport { SortField } from '../types/SortField';\n\nexport const normalizeName = (name: string | null) => {\n  return name?.toLowerCase();\n};\n\nconst CENTURY_DURATION = 100;\n\nconst findIfCenturyIncluded = (\n  person: Person,\n  centuries: string[],\n) => {\n  const { born, died } = person;\n\n  return centuries\n    .includes(Math.ceil(born / CENTURY_DURATION).toString())\n    || centuries.includes(Math.ceil(died / CENTURY_DURATION).toString());\n};\n\nconst includesNormalizedQuery = (person: Person, normalizedQuery: string) => {\n  return (\n    normalizeName(person.name)?.includes(normalizedQuery)\n    || normalizeName(person.motherName)?.includes(normalizedQuery)\n    || normalizeName(person.fatherName)?.includes(normalizedQuery)\n  );\n};\n\nexport const getfilteredPeople = (\n  peopleLoaded: Person[],\n  centuries: string[],\n  sex: string,\n  query: string,\n  sortField: string,\n  sortOrder: string,\n) => {\n  let filteredPeople = [...peopleLoaded];\n\n  if (centuries.length) {\n    filteredPeople = filteredPeople.filter(\n      (person) => findIfCenturyIncluded(person, centuries),\n    );\n  }\n\n  if (sex) {\n    filteredPeople = filteredPeople.filter((person) => person.sex === sex);\n  }\n\n  if (query) {\n    const normalizedQuery = query.toLowerCase().trim();\n\n    filteredPeople = filteredPeople.filter(\n      (person) => includesNormalizedQuery(person, normalizedQuery),\n    );\n  }\n\n  if (sortField) {\n    filteredPeople = filteredPeople.sort((a, b) => {\n      switch (sortField) {\n        case SortField.Name:\n          return a.name.localeCompare(b.name);\n        case SortField.Sex:\n          return a.sex.localeCompare(b.sex);\n        case SortField.Born:\n          return a.born - b.born;\n        case SortField.Died:\n          return a.died - b.died;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (sortOrder === 'desc') {\n    filteredPeople = filteredPeople.reverse();\n  }\n\n  return filteredPeople;\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { getfilteredPeople } from './HelperFunctions';\n\nexport const PeoplePage = () => {\n  const [errorMessage, setErrorMessage] = useState('');\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries') || [];\n  const sex = searchParams.get('sex') || '';\n  const query = searchParams.get('query') || '';\n  const sortField = searchParams.get('sortField') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const filteredPeople = getfilteredPeople(\n    people,\n    centuries,\n    sex,\n    query,\n    sortField,\n    sortOrder,\n  );\n  const NO_PEOPLE_CONDITION = !errorMessage && !people.length && !isLoading;\n  const NO_MATCHING_PEOPLE_CONDITION = !errorMessage && !isLoading\n    && !!people.length && !filteredPeople.length;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => {\n        setErrorMessage('Something went wrong');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {errorMessage && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  {errorMessage}\n                </p>\n              )}\n\n              {NO_PEOPLE_CONDITION && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {NO_MATCHING_PEOPLE_CONDITION && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n\n              {!!filteredPeople.length && (\n                <PeopleTable people={filteredPeople} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const getLinkClass\n    = ({ isActive }: { isActive: boolean }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","export const PageNotFound = () => <h1 className=\"title\">Page not found</h1>;\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route\n              path=\"*\"\n              element={<PageNotFound />}\n            />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\" element={<PeoplePage />}>\n              <Route path=\":personSlug?\" />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}